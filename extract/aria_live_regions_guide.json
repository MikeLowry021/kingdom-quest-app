{"extracted_information": "ARIA live regions allow programmatic exposure of dynamic content changes to assistive technologies. They are crucial for making dynamic updates (e.g., search results, alerts) accessible to users who cannot visually perceive these changes. Assistive technologies typically announce only *dynamic* changes within a live region, with special handling for `role=\"alert\"`.", "specifications": {"aria-live": {"attribute_name": "aria-live", "description": "Sets the priority with which screen readers treat updates to live regions.", "possible_settings": ["off", "polite", "assertive"], "settings_details": {"polite": {"description": "Screen reader announces changes when the user is idle. Recommended for important but non-rapid updates.", "common_use": true}, "assertive": {"description": "Used for time-sensitive/critical notifications requiring immediate attention. Interrupts current screen reader announcements. Should be used sparingly due to potential disruption.", "interrupts_announcement": true}, "off": {"description": "Changes to content are announced only when focus is on or inside the element. This is the default if `aria-live` is not explicitly set, or for roles with implicit `aria-live=\"off\"`."}}}, "aria-atomic": {"attribute_name": "aria-atomic", "description": "Determines whether the screen reader should always present the live region as a whole, even if only part of the region changes.", "possible_settings": ["true", "false"], "default_setting": "false", "details": "When `true`, the entirety of the content is announced upon update. When `false` (default), only the changed parts are announced."}, "aria-relevant": {"attribute_name": "aria-relevant", "description": "Sets what types of changes are relevant to a live region for announcement.", "possible_settings": ["additions", "removals", "text", "all"], "default_setting": "additions text", "details": "Can be one or more values. `additions` announces newly added nodes, `removals` announces removed nodes, `text` announces changes to text content, `all` covers all types of changes."}}, "pricing": {}, "features": [{"feature_name": "Implementation Pattern: Attribute before changes", "description": "Include `aria-live` attribute or a specialized live region role on the element before content changes occur (either in original markup or dynamically via JavaScript). Start with an empty live region, then change content inside."}, {"feature_name": "Special Handling for `role=\"alert\"`", "description": "Content inside `role=\"alert\"` regions is often announced even if present in initial markup or injected dynamically. Depending on browser/assistive technology, `role=\"alert\"` regions may be automatically prefixed with 'Alert'."}], "statistics": {}, "temporal_info": {}, "geographical_data": {}, "references": [{"title": "Screen reader support of Live Regions", "author": "The Paciello Group", "year": "2014", "url": "https://www.tpgi.com/screen-reader-support-aria-live-regions/"}, {"title": "Support of `aria-atomic` and `aria-relevant`", "author": "Paul J. Adam", "url": "https://pauljadam.com/demos/aria-atomic-relevant.html"}], "screen_reader_compatibility": {"general": "Live regions are well supported.", "voiceover_on_ios_note": "Adding both `aria-live` and `role=\"alert\"` can cause double-speaking issues in VoiceOver on iOS.", "example_announcement": "Screenshot shows VoiceOver on Mac announcing updates to a live region via subtitles."}, "roles_with_implicit_live_region_attributes": [{"role": "log", "description": "Chat, error, game, or other types of logs.", "compatibility_notes": "To maximize compatibility, add a redundant `aria-live=\"polite\"`."}, {"role": "status", "description": "A status bar or area that provides an updated status. Screen reader users have a special command to read the current status.", "compatibility_notes": "To maximize compatibility, add a redundant `aria-live=\"polite\"`."}, {"role": "alert", "description": "Error or warning message that flashes on the screen. Important for client-side validation notices.", "compatibility_notes": "Some recommend adding a redundant `aria-live=\"assertive\"`. However, adding both `aria-live` and `role=\"alert\"` causes double speaking issues in VoiceOver on iOS."}, {"role": "progressbar", "description": "A hybrid between a widget and a live region. Used with `aria-valuemin`, `aria-valuenow`, and `aria-valuemax`.", "compatibility_notes": ""}, {"role": "marquee", "description": "Text that scrolls, such as a stock ticker.", "compatibility_notes": "Implicitly `aria-live=\"off\"`."}, {"role": "timer", "description": "Any kind of timer or clock, such as a countdown timer or stopwatch readout.", "compatibility_notes": "Implicitly `aria-live=\"off\"`."}], "dynamic_content_accessibility": {"purpose": "To programmatically expose dynamic content changes (e.g., updating search results, discreet alerts) that are visually apparent but not obvious to assistive technology users.", "classification": "Dynamic content updating without a page reload is generally either a region or a widget. Simple non-interactive changes should be marked as live regions using `aria-live`."}}