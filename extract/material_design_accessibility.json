{"extracted_information": "Detailed information about Google Material Design accessibility principles, color contrast requirements, touch target specifications, navigation patterns, and inclusive design guidelines.", "specifications": {"color_contrast_requirements": {"source": "W3C recommendations", "ratios": [{"text_type": "Large text (at 14 pt bold/18 pt regular and up) and graphics", "ratio": "3:1 against the background"}, {"text_type": "Small text", "ratio": "4.5:1 against the background"}], "additional_notes": ["Icons or other critical elements should also consider using the recommended contrast ratios.", "Decorative elements (such as logos or illustrations) might not meet contrast ratios, but if they serve an important function (like linking to a website) they should be distinguishable.", "Essential information in informative images should have a 3:1 color contrast ratio for large text and 4.5:1 for small text."]}, "touch_target_specifications": {"general_recommendation": "At least 48 x 48 dp (resulting in a physical size of about 9mm)", "ios_specific_recommendation": "44 x 44 pt", "pointer_target_recommendation": "At least 44 x 44 dp", "spacing_recommendation": "Touch targets separated by 8dp of space or more promote balanced information density and usability."}}, "pricing": {}, "features": [], "statistics": {}, "temporal_info": {}, "geographical_data": {}, "references": [], "accessibility_principles": [{"principle": "Clear", "description": "Help users navigate by designing clear layouts with distinct calls to action."}, {"principle": "Robust", "description": "Design your app to accommodate a variety of users."}, {"principle": "Specific", "description": "Support assistive technologies specific to your platform, just as you support the input methods of touch, keyboard, and mouse."}], "navigation_patterns": {"assistive_technology_navigation": ["Explore by touch: Users run their finger over the screen to hear what is directly underneath (e.g., TalkBack's 'explore by touch'). Double tap to select.", "Linear navigation: Users move focus by swiping backwards or forwards to read pages in a linear fashion (top to bottom).", "Users can switch between 'explore by touch' and 'linear navigation' modes.", "Navigation by landmark: Assistive technologies allow navigation between page landmarks (e.g., headings) when appropriate semantic markup is used.", "Directional controllers (hardware or software like D-pad, trackball, keyboard) allow linear selection traversal."], "hierarchy_and_focus_navigation": ["Visual feedback and touch feedback show users what is available in the UI.", "Navigation should have clear task flows with minimal steps, easy-to-locate controls, and clear labeling.", "Focus control (ability to control keyboard and reading focus) can be implemented for frequently used tasks.", "Simplify UI understanding by using clearly visible elements, sufficient contrast and size, a clear hierarchy of importance, and key information discernable at a glance.", "Place important actions at the top or bottom of the screen (reachable with shortcuts); place related items of similar hierarchy next to each other.", "Visual hierarchy: Screen readers rely on the top-down HTML structure for reading content. Designers should collaborate with developers to ensure HTML order matches intended visual order.", "Focus order: Input focus usually flows from top to bottom, or most important to least important. Consider the order elements receive focus, how elements are grouped, and where focus moves if an element disappears.", "Grouping: Items can be grouped under headings to organize content spatially.", "Transitions: Focus traversal between screens and tasks should be continuous. If a task is interrupted, return focus to the previously focused element."]}, "inclusive_design_guidelines": ["Improve product usability for all users, including those with low vision, blindness, hearing impairments, cognitive impairments, motor impairments, or situational disabilities.", "Support assistive technologies like screen readers (Google TalkBack, Apple VoiceOver, Freedom Scientific's JAWS), magnification tools, and hearing aids.", "Use multiple visual cues (strokes, indicators, patterns, texture, or text) to communicate important states, especially for users who are colorblind.", "Implement flexible, responsive layouts that scale content in relation to screen size, avoiding truncation.", "Group related items in proximity to one another to improve readability and ensure both are visible under magnification.", "Allow users to adjust font size system-wide; use scalable pixels (sp) for text measurement in Android apps.", "Ensure sufficient space for large and foreign language fonts.", "Use accessibility text (visible and nonvisible) for screen readers; it should be descriptive and meaningful.", "Alt text for images: short (up to 125 characters), informative, describes what the image shows, includes targeted keywords, and avoids phrases like 'image of'.", "Use captions for long descriptions or contextual information about assets, especially when alt text character limits are insufficient.", "Adjacent text can explain images; if it does, alt text may not be needed (alt=\"\").", "Avoid embedding essential information as text in imagery, as screen readers cannot read it directly (if necessary, include in alt text).", "Prioritize short, clear accessibility text for faster screen reader navigation.", "Screen readers may automatically announce control types/states; use short descriptions for controls.", "Indicate elements by action verbs (e.g., 'Show navigation menu') rather than what they look like.", "For toggle icons, announce the current state or the action that occurs (e.g., 'Add to wishlist' / 'Remove from wishlist').", "Consider keyboard/other device navigation when describing control interactions; accessibility software will describe correct interaction.", "Use hint speech for unclear actions (e.g., 'double-tap to select').", "For sounds, provide controls (pause/stop) and visual alternatives (closed captions, transcript).", "For motion, enable content that moves/scrolls/blinks automatically to be paused, stopped, or hidden if it lasts >5 seconds (W3C guideline).", "Limit flashing content to three times in a one-second period (W3C guideline).", "Avoid flashing large central regions of the screen (W3C guideline).", "High-priority controls should not disappear too quickly due to timers.", "Use standard platform controls and semantic HTML to ensure compatibility with assistive technology.", "Test apps for full task completion with various assistive technologies turned on (e.g., TalkBack, changing speech speed).", "Have users with impairments test the app.", "Ensure scalability of UI for magnification and large text without overlapping or cutoff content.", "Ensure keyboard and mouse interfaces have every task and all hover information available via keyboard-only input.", "Ensure touch interfaces allow screen readers and other assistive technology devices to read all parts of the interface.", "Label UI elements using contentDescription (Android) or aria-label (web) for icons without visible text.", "Include features with special accessibility considerations in help documentation."]}